/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: ops@groupbyinc.com
 * Generated by: https://openapi-generator.tech
 */

/// Facet : A facet specification to perform faceted search.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Facet {
    /// Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet will give only \"Women > Shoe\" and \"Women > Dress\". Only supported on textual fields. Maximum is 10. This field is case-sensitive
    #[serde(rename = "prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<String>,
    /// Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet will give only \"Women > Shoe\" and \"Men > Shoe\". Only supported on textual fields. Maximum is 10. This field is case-sensitive
    #[serde(rename = "contains", skip_serializing_if = "Option::is_none")]
    pub contains: Option<String>,
    /// Display name of facet
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Box<crate::models::NavigationType>>,
    /// Represents the name of navigation.
    #[serde(rename = "navigationName", skip_serializing_if = "Option::is_none")]
    pub navigation_name: Option<String>,
}

impl Facet {
    /// A facet specification to perform faceted search.
    pub fn new() -> Facet {
        Facet {
            prefix: None,
            contains: None,
            display_name: None,
            r#type: None,
            navigation_name: None,
        }
    }
}


