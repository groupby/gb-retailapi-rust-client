/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: ops@groupbyinc.com
 * Generated by: https://openapi-generator.tech
 */

/// SearchResults : SAYT response. Contains list of suggestions ad base response information.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResults {
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<crate::models::SearchResultsStats>>,
    #[serde(rename = "searchTerms")]
    pub search_terms: Vec<crate::models::SearchTerms>,
    /// Map with extended attributes which are returned in autocomplete response. 
    #[serde(rename = "extendedAttributes", skip_serializing_if = "Option::is_none")]
    pub extended_attributes: Option<::std::collections::HashMap<String, Vec<String>>>,
    /// SAYT response attributes. Contains list of direct matching attributes.
    #[serde(rename = "attributeResults", skip_serializing_if = "Option::is_none")]
    pub attribute_results: Option<::std::collections::HashMap<String, crate::models::AttributeSuggestion>>,
    /// SiteFilter object used with request.
    #[serde(rename = "siteFilter", skip_serializing_if = "Option::is_none")]
    pub site_filter: Option<String>,
}

impl SearchResults {
    /// SAYT response. Contains list of suggestions ad base response information.
    pub fn new(search_terms: Vec<crate::models::SearchTerms>) -> SearchResults {
        SearchResults {
            stats: None,
            search_terms,
            extended_attributes: None,
            attribute_results: None,
            site_filter: None,
        }
    }
}


